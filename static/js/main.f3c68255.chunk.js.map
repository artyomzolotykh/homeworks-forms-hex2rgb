{"version":3,"sources":["components/Background.js","components/Hashtag.js","components/RgbResult.js","App.js","reportWebVitals.js","index.js"],"names":["Background","hashtag","className","style","background","Hashtag","props","type","value","onChange","evt","target","onHashtag","RgbResult","rgb","App","useState","setHashtag","setRgb","backgroundColor","setBackgroundColor","convertHashToRgb","length","rgbColorsString","arrayColors10","replace","_m","r","g","b","substring","match","map","x","parseInt","i","isNaN","join","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAMeA,EANI,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OACE,qBAAKC,UAAU,aAAaC,MAAO,CAACC,WAAYH,MCcrCI,EAhBC,SAAAC,GAOd,OACE,uBACEC,KAAK,OACLC,MAAOF,EAAML,QACbQ,SATwB,SAAAC,GAC1B,IAAOF,EAASE,EAAIC,OAAbH,MACPF,EAAMM,UAAUJ,OCGLK,EAPG,SAAC,GAAW,IAAVC,EAAS,EAATA,IAElB,OACE,qBAAKZ,UAAU,YAAf,SAA4BY,KCkDjBC,MA/Cf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOf,EAAP,KAAgBgB,EAAhB,KACA,EAAsBD,mBAAS,IAA/B,mBAAOF,EAAP,KAAYI,EAAZ,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KAOMC,EAAmB,SAAAb,GACvB,GAAqB,IAAjBA,EAAMc,OAAc,CAStB,IAPA,IAAIC,EAEEC,EAAgBhB,EAAMiB,QAAQ,oCACjC,SAACC,EAAIC,EAAGC,EAAGC,GAAX,MAAiB,IAAMF,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,KAC3CC,UAAU,GAAGC,MAAM,SACnBC,KAAI,SAAAC,GAAC,OAAIC,SAASD,EAAG,OAEfE,EAAI,EAAGA,EAAIX,EAAcF,OAAQa,IACxC,GAAgC,kBAArBX,EAAcW,IAAmBC,MAAMZ,EAAcW,IAI9D,OAHAf,EAAmB,WAEnBF,EADAK,EAAkB,0CAEX,EAIXH,EAAmBZ,GACnBe,EAAe,cAAUC,EAAca,KAAK,MAA7B,KACfnB,EAAOK,KAKX,OACE,sBAAKrB,UAAU,MAAf,UACE,cAAC,EAAD,CAAYD,QAASkB,IACrB,sBAAKjB,UAAU,UAAf,UACE,cAAC,EAAD,CAASU,UAnCO,SAAAJ,GACpBS,EAAWT,GACXa,EAAiBb,IAiCsBP,QAASA,IAC5C,cAAC,EAAD,CAAWa,IAAKA,WCnCTwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f3c68255.chunk.js","sourcesContent":["const Background = ({hashtag}) => {\r\n  return (\r\n    <div className=\"Background\" style={{background: hashtag}}></div>\r\n  )\r\n}\r\n\r\nexport default Background;","const Hashtag = props => {\r\n\r\n  const handleHashtagChange = evt => {\r\n    const {value} = evt.target;\r\n    props.onHashtag(value);\r\n  }\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      value={props.hashtag}\r\n      onChange={handleHashtagChange}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Hashtag;","const RgbResult = ({rgb}) => {\r\n\r\n  return (\r\n    <div className=\"RgbResult\">{rgb}</div>\r\n  )\r\n}\r\n\r\nexport default RgbResult;","import React, { useState } from 'react';\nimport './App.css';\nimport Background from './components/Background';\nimport Hashtag from './components/Hashtag';\nimport RgbResult from './components/RgbResult';\n\nfunction App() {\n  const [hashtag, setHashtag] = useState('');\n  const [rgb, setRgb] = useState('');\n  const [backgroundColor, setBackgroundColor] = useState('');\n\n  const handleHashtag = value => {\n    setHashtag(value);\n    convertHashToRgb(value);\n  }\n\n  const convertHashToRgb = value => {\n    if (value.length === 7) {\n\n      let rgbColorsString;\n      \n      const arrayColors10 = value.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i\n        ,(_m, r, g, b) => '#' + r + r + g + g + b + b)\n        .substring(1).match(/.{2}/g)\n        .map(x => parseInt(x, 16));\n\n      for (let i = 0; i < arrayColors10.length; i++){\n        if (typeof arrayColors10[i] === 'number' && isNaN(arrayColors10[i])) {\n          setBackgroundColor('#e94b35');\n          rgbColorsString = 'Ошибка!';\n          setRgb(rgbColorsString);\n          return false;\n        }\n      }\n\n      setBackgroundColor(value);\n      rgbColorsString = `rgb(${arrayColors10.join(', ')})`;\n      setRgb(rgbColorsString);\n\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Background hashtag={backgroundColor} />\n      <div className=\"wrapper\">\n        <Hashtag onHashtag={handleHashtag} hashtag={hashtag} />\n        <RgbResult rgb={rgb} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}